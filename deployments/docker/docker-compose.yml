services:
  api-gateway:
    restart: unless-stopped
    build:
      context: ../..
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - USER_SERVICE_URL=user-service:9001
      - CONSUL_URL=consul:8500
      - APP_ENV=development
      - HOST_MODE=docker
      - ENVIRONMENT=development
    depends_on:
      - user-service
      - consul
    networks:
      - cloud-drive-network


  user-service:
    restart: unless-stopped
    build:
      context: ../..
      dockerfile: user-service/Dockerfile
    ports:
      - "9001:9001"
    environment:
      - PORT=9001
      - CONSUL_URL=consul:8500
      - APP_ENV=development
      - HOST_MODE=docker
      - ENVIRONMENT=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=users
    depends_on:
      - postgres
      - consul
    networks:
      - cloud-drive-network

  consul:
    restart: unless-stopped
    image: hashicorp/consul:1.15
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0
    networks:
      - cloud-drive-network

  postgres:
    restart: unless-stopped
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - cloud-drive-network

  nginx:
    restart: unless-stopped
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ../../deployments/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-gateway
    networks:
      - cloud-drive-network

networks:
  cloud-drive-network:
    driver: bridge

volumes:
  postgres-data: 